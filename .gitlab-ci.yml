image: docker.bestsens.local/bone/fedora-build-image

variables:
    GIT_SUBMODULE_STRATEGY: recursive

stages:
    - build
    - deploy
    - release

.artifacts: &artifacts
    expire_in: 4 weeks
    paths:
        - build/bemos_modbus_client
        - build/bemos_modbus_client.dbg
        - README.md

## Build ##############################################################################################################
build:arm:
    image: docker.bestsens.local/bone/musl-build-image
    stage: build
    artifacts:
        <<: *artifacts
        name: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}_arm"
    cache:
        - key: "global_cache"
          paths:
            - .cache/
        - key: "${CI_COMMIT_REF_SLUG}_arm"
          paths:
            - build/
    script:
        - export CCACHE_DIR=${PWD}/.cache/ccache
        - mkdir -p build
        - cd build
        -   if [ "${CI_COMMIT_TAG}" == "" ]; then
                cmake .. -GNinja
                    -DGIT_BRANCH=${CI_COMMIT_REF_SLUG}
                    -DGIT_COMMIT_HASH=${CI_COMMIT_SHORT_SHA}
                    -DCPM_SOURCE_CACHE=../.cache/CPM
                    -DBUILD_TESTS=OFF
                    -DCMAKE_TOOLCHAIN_FILE=../libs/bone_helper/cmake/arm-bemos-linux-musleabihf.cmake;
            else
                cmake .. -GNinja
                    -DGIT_BRANCH=master
                    -DGIT_COMMIT_HASH=${CI_COMMIT_SHORT_SHA}                
                    -DCPM_SOURCE_CACHE=../.cache/CPM
                    -DBUILD_TESTS=OFF
                    -DCMAKE_TOOLCHAIN_FILE=../libs/bone_helper/cmake/arm-bemos-linux-musleabihf.cmake;
            fi
        - ninja

build:i686:
    stage: build
    artifacts:
        <<: *artifacts
        name: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHA}_i686"
    cache:
        - key: "global_cache"
          paths:
            - .cache/
        - key: "${CI_COMMIT_REF_SLUG}_i686"
          paths:
            - build/
    script:
        - export CCACHE_DIR=${PWD}/.cache/ccache
        - mkdir -p build
        - cd build
        -   if [ "${CI_COMMIT_TAG}" == "" ]; then
                cmake .. -GNinja
                    -DGIT_BRANCH=${CI_COMMIT_REF_SLUG}
                    -DGIT_COMMIT_HASH=${CI_COMMIT_SHORT_SHA}
                    -DCPM_SOURCE_CACHE=../.cache/CPM; 
            else
                cmake .. -GNinja
                    -DGIT_BRANCH=master
                    -DGIT_COMMIT_HASH=${CI_COMMIT_SHORT_SHA}                
                    -DCPM_SOURCE_CACHE=../.cache/CPM;
            fi
        - ninja

## Create persistent archives #########################################################################################
.deploy: &deploy
    stage: deploy
    when: on_success
    only:
        - tags
    variables:
        GIT_STRATEGY: none
    script:
        - echo '1'

deploy:arm:
    <<: *deploy
    artifacts:
        <<: *artifacts
        name: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_arm"
        expire_in:
        reports:
            dotenv: generate_executables.env
    dependencies:
        - build:arm
    script:
        - echo GE_JOB_ID=$CI_JOB_ID >> generate_executables.env

deploy:i686:
    <<: *deploy
    artifacts:
        <<: *artifacts
        name: "${CI_PROJECT_NAME}_${CI_COMMIT_REF_NAME}_i686"
        expire_in:
    dependencies:
        - build:i686

## Release ############################################################################################################
release_job:
    stage: release
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    needs:
        - job: deploy:arm
          artifacts: true
    only:
        - tags
    script:
        - echo 'releasing $_CI_COMMIT_TAG'
    release:
        name: '$CI_COMMIT_TAG'
        description: 'Automatically created'
        tag_name: '$CI_COMMIT_TAG'
        ref: '$CI_COMMIT_TAG'
        assets:
            links:
                - name: "Linux ARM"
                  url: "https://gitlab.bestsens.local/bone/bemos-modbus-client/-/jobs/${GE_JOB_ID}/artifacts/download"